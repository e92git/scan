
-Команды (из корня проекта):
go mod init scan - создание проекта scan в корне
go mod tidy - обновить зависимости всего проекта
go get -u ./cmd - обновление всех модулей в проекте
go get github.com/foo - установить зависимость foo
go run cmd/main.go - запустить проект
go build cmd/main.go - создать exe файл проекта (/main.exe)

-Swagger обновить:
swag init -g cmd/main.go

-Запустить тесты:
go test scan/app/controller 

-Автодеплой:
https://github.com/e92git/scan/actions
https://dev.to/miangame/how-to-automate-a-deploy-in-a-vps-with-github-actions-via-ssh-101e
https://codesahara.com/blog/how-to-deploy-golang-with-supervisor/
https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-20-04

-Мой Github deploy script:
cd scan
git pull
go mod init scan
go mod tidy
go build cmd/main.go
supervisorctl restart scan

---
Scan Bulk - 
https://betterprogramming.pub/how-to-bulk-create-and-update-the-right-way-in-golang-part-i-e15a8e5585d1 пункт 3
---

-LOG:
/var/log/supervisor/scan.log - лог работы main.go

-SUPERVISOR Проверка состояния:
supervisorctl reload - запускать после редактирования supervisor/../scan.conf на сервере!
supervisorctl status
supervisorctl restart scan - запускать после редактирования .env на сервере!
supervisorctl stop scan

-SUPERVISOR Настройка (nano /etc/supervisor/conf.d/scan.conf):
[program:scan]
directory=/root/scan
command=/root/scan/main
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/scan.err.log
stdout_logfile=/var/log/supervisor/scan.log

-NGINX:
service nginx restart
