basePath: /api/v1
definitions:
  controller.ActionError:
    properties:
      error:
        example: User not found
        type: string
      url:
        example: scan.e92.ru/api/v1/scan
        type: string
    type: object
  controller.AddScanRequest:
    properties:
      place:
        example: pokrovka
        type: string
      plate:
        example: M343TT123
        type: string
      scanned_at:
        example: "2022-07-23 11:23:55"
        type: string
    required:
    - place
    - plate
    - scanned_at
    type: object
  controller.VinByPlateRequest:
    properties:
      plate:
        example: M343TT123
        type: string
    required:
    - plate
    type: object
  model.Location:
    properties:
      code:
        example: pokrovka
        type: string
      id:
        example: 12
        type: integer
      name:
        example: Красноярск Покровка
        type: string
    type: object
  model.Scan:
    properties:
      created_at:
        example: "2022-08-04T12:23:52.372+07:00"
        type: string
      id:
        example: 76352
        type: integer
      location_id:
        example: 12
        type: integer
      plate:
        example: О245КМ142
        type: string
      scanned_at:
        example: "2022-07-29T11:23:55+07:00"
        type: string
      user_id:
        example: 234
        type: integer
    required:
    - location_id
    - plate
    - scanned_at
    - user_id
    type: object
  model.Vin:
    properties:
      author_user_id:
        example: 234
        type: integer
      body:
        example: KGC100005240
        type: string
      created_at:
        example: "2022-07-28T11:23:55+07:00"
        type: string
      id:
        example: 7635
        type: integer
      mark_id:
        example: 23
        type: integer
      model_id:
        example: 231
        type: integer
      plate:
        example: О245КМ142
        type: string
      response:
        example: '{...}'
        type: string
      response_error:
        example: "400"
        type: string
      status_id:
        example: 3
        type: integer
      updated_at:
        example: "2022-07-23T11:23:55+07:00"
        type: string
      vin:
        example: XTA219170K0330071
        type: string
      vin2:
        example: XTA219170K0330071
        type: string
      year:
        example: 2012
        type: integer
    required:
    - author_user_id
    - plate
    - status_id
    type: object
info:
  contact: {}
  description: |-
    Здесь представлены все методы для работы админстраторов и менеджеров магазинов.
    Вопросы на info@e92.ru.
  title: Дискаунтер автозачастей е92
  version: "1.0"
paths:
  /locations:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Location'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ActionError'
      summary: Список расположений камер
      tags:
      - Расположение
  /scan:
    post:
      consumes:
      - application/json
      parameters:
      - description: Добавить сканирование
        in: body
        name: scan
        required: true
        schema:
          $ref: '#/definitions/controller.AddScanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Scan'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ActionError'
      security:
      - ApiKeyAuth: []
      summary: Добавить отсканированный номер
      tags:
      - Сканирование
  /vin:
    post:
      consumes:
      - application/json
      parameters:
      - description: Распознать по госномеру
        in: body
        name: vin
        required: true
        schema:
          $ref: '#/definitions/controller.VinByPlateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Vin'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ActionError'
      security:
      - ApiKeyAuth: []
      summary: Распознать vin и другие данные по госномеру
      tags:
      - Распознание
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
