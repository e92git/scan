basePath: /api/v1
definitions:
  controller.ActionError:
    properties:
      error:
        example: User not found
        type: string
      url:
        example: scan.e92.ru/api/v1/scan
        type: string
    type: object
  controller.AddScanBulkRequest:
    properties:
      data:
        items:
          $ref: '#/definitions/service.Scans'
        type: array
      location_id:
        example: 1
        type: integer
    required:
    - data
    - location_id
    type: object
  controller.AddScanRequest:
    properties:
      place:
        example: pokrovka
        type: string
      plate:
        example: M343TT123
        type: string
      scanned_at:
        example: "2022-07-23 11:23:55"
        type: string
    required:
    - place
    - plate
    - scanned_at
    type: object
  controller.VinByPlateBulkRequest:
    properties:
      plate:
        example:
        - M343TT123
        - B345KY24
        items:
          type: string
        type: array
    required:
    - plate
    type: object
  controller.VinByPlateRequest:
    properties:
      plate:
        example: M343TT123
        type: string
    required:
    - plate
    type: object
  model.CarMark:
    properties:
      id:
        example: 12
        type: integer
      name:
        example: Toyota
        type: string
    required:
    - name
    type: object
  model.CarModel:
    properties:
      id:
        example: 123
        type: integer
      mark_id:
        example: 12
        type: integer
      name:
        example: Prius
        type: string
    required:
    - mark_id
    - name
    type: object
  model.Location:
    properties:
      code:
        example: pokrovka
        type: string
      id:
        example: 12
        type: integer
      name:
        example: Красноярск Покровка
        type: string
    type: object
  model.Scan:
    properties:
      created_at:
        example: "2022-08-04T12:23:52.372+07:00"
        type: string
      id:
        example: 76352
        type: integer
      location_id:
        example: 12
        type: integer
      plate:
        example: О245КМ142
        type: string
      scanned_at:
        example: "2022-07-29T11:23:55+07:00"
        type: string
      user_id:
        example: 234
        type: integer
    required:
    - location_id
    - scanned_at
    - user_id
    type: object
  model.User:
    properties:
      id:
        example: 234
        type: integer
      name:
        example: ivan_v
        type: string
      role:
        enum:
        - client
        - show_api
        - manager
        - admin
        example: client
        type: string
    type: object
  model.Vin:
    properties:
      author:
        $ref: '#/definitions/model.User'
      body:
        example: KGC100005240
        type: string
      created_at:
        example: "2022-07-28T11:23:55.999+07:00"
        type: string
      id:
        example: 7635
        type: integer
      mark:
        $ref: '#/definitions/model.CarMark'
      model:
        $ref: '#/definitions/model.CarModel'
      plate:
        example: О245КМ142
        type: string
      response:
        example: '{...}'
        type: string
      response_error:
        example: '400: bad request'
        type: string
      status:
        $ref: '#/definitions/model.VinStatus'
      updated_at:
        example: "2022-07-23T11:23:55.999+07:00"
        type: string
      vin:
        example: XTA219170K0330071
        type: string
      vin2:
        example: XTA219170K0330071
        type: string
      year:
        example: 2012
        type: integer
    type: object
  model.VinStatus:
    properties:
      id:
        example: 4
        type: integer
      name:
        example: Результат успешно получен
        type: string
    type: object
  service.Scans:
    properties:
      date:
        example: "2022-07-06 10:31:12"
        type: string
      plate:
        example: Т237АС142
        type: string
    required:
    - date
    - plate
    type: object
info:
  contact: {}
  description: |-
    Здесь представлены все методы для работы админстраторов и менеджеров магазинов.
    Вопросы на info@e92.ru.
  title: Дискаунтер автозачастей е92
  version: "1.0"
paths:
  /locations:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Location'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ActionError'
      summary: Список расположений камер
      tags:
      - Расположение
  /scan:
    post:
      consumes:
      - application/json
      description: Ести метод вызвать 2 раза, то он вставит указанный номер 2 раза
      parameters:
      - description: Добавить сканирование
        in: body
        name: scan
        required: true
        schema:
          $ref: '#/definitions/controller.AddScanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Scan'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ActionError'
      security:
      - ApiKeyAuth: []
      summary: Добавить отсканированный номер
      tags:
      - Сканирование
  /scan/bulk:
    post:
      consumes:
      - application/json
      description: Ести метод вызвать 2 раза, то он вставит указанный номер 2 раза
      parameters:
      - description: Добавить сканирование
        in: body
        name: scan
        required: true
        schema:
          $ref: '#/definitions/controller.AddScanBulkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ActionError'
      security:
      - ApiKeyAuth: []
      summary: Добавить отсканированные номера пачкой
      tags:
      - Сканирование
  /vin:
    post:
      consumes:
      - application/json
      description: Ести метод вызвать 2 раза, то он потратит 1 сканирование. Вернет
        из кэша.
      parameters:
      - description: Распознать по госномеру
        in: body
        name: vin
        required: true
        schema:
          $ref: '#/definitions/controller.VinByPlateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Vin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ActionError'
      security:
      - ApiKeyAuth: []
      summary: Распознать vin и другие данные по госномеру
      tags:
      - Распознание
  /vin/bulk:
    post:
      consumes:
      - application/json
      description: |-
        Ести метод вызвать 2 раза, то он потратит 1 сканирование. Вернет из кэша.
        Распознание происходит не сразу, отложенно (12 номеров в минуту).
      parameters:
      - description: Распознать по госномерам
        in: body
        name: vin
        required: true
        schema:
          $ref: '#/definitions/controller.VinByPlateBulkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Vin'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ActionError'
      security:
      - ApiKeyAuth: []
      summary: Распознать vin и другие данные по госномеру пачкой
      tags:
      - Распознание
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
